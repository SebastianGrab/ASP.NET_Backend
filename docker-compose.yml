version: '1'

services:

  # Postgres DB as backend database
  db:
    container_name: db
    image: postgres:12
    environment:
      - POSTGRES_USER=db-admin
      - POSTGRES_PASSWORD=DRKwebapp2024_postgres
      - POSTGRES_DB=DRK_DB
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - drk-network
    volumes:
      - pgdata:/var/lib/postgresql/data

  # C# Backend
  csharp_backend:
    container_name: csharp_backend
    build:
      context: backend/csharp
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    networks:
      - drk-network
    depends_on:
      db:
        condition: service_healthy
    environment:
        ASPNETCORE_ENVIRONMENT: "Development"
        ConnectionStrings__ConnectionString: "Host=db;Database=DRK_DB;Username=db-admin;Password=DRKwebapp2024_postgres"

  # DBMS System
  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pgadmin
  #   restart: always
  #   ports:
  #     - "15432:81"
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: superadmin@drk.de
  #     PGADMIN_DEFAULT_PASSWORD: A9UZlRyKmeTxRFfGcPo6M67r
  #     PGADMIN_LISTEN_PORT: 81
  #   networks:
  #     - drk-network
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin
  #   depends_on:
  #     - db

  # JavaScript Frontend
  # frontend:
  #   container_name: js_frontend
  #   build:
  #     context: frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8081:80"
  #   networks:
  #     - drk-network
  #   depends_on:
  #     - csharp_backend

volumes:
  pgdata: {}
  pgadmin-data: {}

networks:
  drk-network:
    driver: bridge